package lecture0817;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class S1493 {
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		BufferedWriter bw= new BufferedWriter(new OutputStreamWriter(System.out));
		int T;		T=sc.nextInt();
		List<Integer> list = new ArrayList<>();
		//격자모양이잇으면
		//오른쪽아래를 보면 1 3 6 10 ~ 이런식으로간다 
		//i=1  i=2 i=3이라치면    i=0부터시작한다치면
		// (i^2+i) /2 임            i -> i+1을 넣으면 되니 i^2 +3i +2/2
		for (int i = 0; i < 150; i++) {
			// list에 계차수열적용한 수들 (격자점의 숫자들) 추가함
			list.add((int) ((Math.pow(i,2)+3*i+2)/2));
		}
		int rlimitCal,p,q;//결과값 변수, 입력받는 p, q
		boolean isPfind=false,isQfind=false;
		int px=0,py=0,qx=0,qy=0;//,rx=0,ry=0;
		int tempp,tempq;//,rlimit
		for(int test_case = 1; test_case <= T; test_case++)
		{									
			p = sc.nextInt();
			q = sc.nextInt();
			//입력받은 p랑 q를 찾앗냐는 불리안변수
			isPfind=false;isQfind=false;
			//p의좌표 q의 좌표 결과의 좌표 
		//	px=0;py=0;qx=0;qy=0;//rx=0;ry=0;
			//rlimitCal=0;
			
			for (int i = 0; i < 150; i++) {				
				//리스트에 추가한것이 p보다 커지는순간 즉 그곳의 i에서 대각선그은선에 p가 존재한다
				if(p<=list.get(i)&&!isPfind)	
				{	
					//그 대각선의 가장 큰 list.get i  를 템프에다넣고
					tempp=list.get(i);
					//가장큰숫자를 하나씩줄이며 p를찾는다
					while(p!=tempp)
						tempp--;
					//그 차이를 p의 x좌표에 반영한다
					px= i+1-(list.get(i)-tempp);
					//그 차이를 p의 y조표에 반영
					py= 1+(list.get(i)-tempp);
					//p의 위치 찾앗다!
					isPfind=true;					
				}
				//리스트에 추가한것이q보다 커지는순간 즉 그곳의 i에서 대각선그은선에 q가 존재한다
				if(q<=list.get(i)&&!isQfind)	
				{//그 대각선의 가장 큰 list.get i  를 템프에다넣고
					tempq=list.get(i);
					//가장큰숫자를 하나씩줄이며 q를찾는다
					while(q!=tempq)
						tempq--;
					//그 차이를q의 x좌표에 반영한다
					qx= i+1- (list.get(i)-tempq);
					qy= 1+(list.get(i)-tempq);		
					isQfind=true;
				}
				if(isPfind&&isQfind)
					break;				
			}			
			//얻어낸 p와 q를 합하여 결과 좌표를 구한다
			//rx= px+qx;
			//ry= py+qy;
			
			//결과좌표의 대각선 맨오른쪽아래값
			//rlimit =  rx+ry-1;
			//계차수열을 이용하여 계산
			rlimitCal = (int) ((Math.pow(px+qx+py+qy-1,2)+px+qx+py+qy-1)/2)-(py+qy-1);
			//그 값이 ry값만큼 올라가야 rx ry의 해당값을 알 수 있음
			//rlimitCal=rlimitCal - (ry-1);	
			bw.write("#"+test_case+" "+rlimitCal+"\n");
		}
		bw.flush();
		bw.close();
	}
}
