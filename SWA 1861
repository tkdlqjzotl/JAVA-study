//

package lecture0806;



import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class SqaureRoom {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());

		int[] dx = { 1, -1, 0, 0 };
		int[] dy = { 0, 0, 1, -1 };

		for (int t = 1; t <= T; t++) {
			int max = 0, nowi, nowj, maxroomnum = 1001, roomnum;// ,tempi,tempj 노쓸모
			int N = Integer.parseInt(br.readLine());
			int[][] room = new int[N][N];
			int[][] canMoveCount = new int[N][N];
			boolean isVisited[][] = new boolean[N][N];

			for (int i = 0; i < N; i++) {
				String str = br.readLine();
				StringTokenizer st = new StringTokenizer(str);
				for (int j = 0; j < N; j++) {
					room[i][j] = Integer.parseInt(st.nextToken());
					canMoveCount[i][j] = 1;
				}
			}

			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					isVisited[i][j] = true;
					roomnum = room[i][j];

					nowi = i;
					nowj = j;

					for (int d = 0; d < 4; d++) {
						int nx = j + dx[d];
						int ny = i + dy[d];
						// System.out.println(canMoveCount[nowi][nowj] + " " + roomnum + " " + ny+ nx +
						// tempi+tempj+i+j+" "+d);

						if (nx < 0 || nx >= N || ny < 0 || ny >= N) {
							continue;
						}

						if (room[ny][nx] == roomnum + 1) {
							if (isVisited[ny][nx] == true) {
								canMoveCount[nowi][nowj] += canMoveCount[ny][nx];
								break;
							}

							canMoveCount[nowi][nowj]++;
							isVisited[ny][nx] = true;
							roomnum = room[ny][nx];
							j = nx;
							i = ny;
							d = -1;
							continue;
						}

					}
					i = nowi;
					j = nowj;

					if (canMoveCount[i][j] > max) {
						max = canMoveCount[i][j];
						maxroomnum = room[i][j];
					} else if (canMoveCount[i][j] == max && maxroomnum > room[i][j])
						maxroomnum = room[i][j];
				}
				// System.out.print(maxroomnum + " " + max+ " ");
			}

			System.out.println("#" + t + " " + maxroomnum + " " + max);

		}

	}

}
