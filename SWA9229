package lecture0809;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class SWA9229 {
	static int M;
	static int weight[], max;
	static boolean[] isSelected;

	static void whatIsMax(int cnt, int sum, int ind) {
		if (sum > M) {
			return;
		}

		if (cnt == 2) {
			max = (max < sum) ? sum : max;
			return;
		}

		for (int i = ind; i < weight.length; i++) {
				sum += weight[i];
				whatIsMax(cnt + 1, sum, i + 1);
				sum -= weight[i];
		}

	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int T = Integer.parseInt(br.readLine());

		for (int i = 0; i < T; i++) {
			max = -1;
			String str = br.readLine();
			StringTokenizer st = new StringTokenizer(str);
			int N = Integer.parseInt(st.nextToken());
			M = Integer.parseInt(st.nextToken());
			weight = new int[N];
			isSelected = new boolean[N];

			str = br.readLine();
			st = new StringTokenizer(str);

			for (int j = 0; j < N; j++) {
				weight[j] = Integer.parseInt(st.nextToken());
			}

			whatIsMax(0, 0, 0);

			bw.write("#" + (i + 1) + " " + max+"\n");
			bw.flush();
		}

	}

}
